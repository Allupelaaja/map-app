{"version":3,"sources":["components/Map.js","App.js","index.js"],"names":["AddMarkerToClick","useState","markers","setMarkers","useMapEvents","click","e","newMarker","latlng","console","log","map","marker","Marker","position","icon","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","Popup","lat","lng","onClick","index","indexOf","newMarkers","splice","removeMarker","Map","className","MapContainer","center","zoom","style","height","width","TileLayer","attribution","url","App","ReactDOM","render","document","getElementById"],"mappings":"6NAMA,SAASA,IAEL,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OARAC,YAAa,CACTC,MADS,SACHC,GACF,IAAMC,EAAYD,EAAEE,OACpBL,EAAW,GAAD,mBAAKD,GAAL,CAAcK,KACxBE,QAAQC,IAAIR,MAKhB,mCACKA,EAAQS,KAAI,SAAAC,GAAM,OACf,cAACC,EAAA,EAAD,CAAQC,SAAUF,EAAQG,KAAM,IAAIC,OAAK,CAAEC,QAASC,IAAeC,SAAU,CAAC,GAAI,IAAKC,WAAY,CAAC,GAAI,MAAxG,SACI,cAACC,EAAA,EAAD,UACI,gCACI,8CAAiBT,EAAOU,IAAxB,KAA+BV,EAAOW,OACtC,wBAAQC,QAAS,kBAzBzC,SAAsBZ,GAClB,IAAMa,EAAQvB,EAAQwB,QAAQd,GAC9B,GAAIa,GAAS,EAAG,CACZ,IAAIE,EAAU,YAAOzB,GACrByB,EAAWC,OAAOH,EAAO,GACzBtB,EAAWwB,GAEflB,QAAQC,IAAI,kBAkB+BmB,CAAajB,IAApC,uCAS5B,IAoBekB,EApBH,WAGR,OACI,qBAAKC,UAAU,iBAAf,SACI,eAACC,EAAA,EAAD,CACIC,OALY,CAAC,kBAAmB,kBAMhCC,KAAM,GACNC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAHpC,UAKI,cAACrC,EAAD,IACA,cAACsC,EAAA,EAAD,CACIC,YAAY,yEACZC,IAAI,6DC9CTC,MATf,WACE,OACE,gCACE,wCACA,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34165467.chunk.js","sourcesContent":["import { MapContainer, TileLayer, useMapEvents, Marker, Popup } from \"react-leaflet\";\nimport { useState } from 'react';\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\nimport { Icon } from 'leaflet'\nimport 'leaflet/dist/leaflet.css';\n\nfunction AddMarkerToClick() {\n\n    const [markers, setMarkers] = useState([]);\n\n    function removeMarker(marker) {\n        const index = markers.indexOf(marker);\n        if (index > -1) {\n            var newMarkers = [...markers]\n            newMarkers.splice(index, 1);\n            setMarkers(newMarkers)\n        }\n        console.log(\"marker removed\")\n    }\n\n    useMapEvents({\n        click(e) {\n            const newMarker = e.latlng\n            setMarkers([...markers, newMarker]);\n            console.log(markers)\n        },\n    })\n\n    return (\n        <>\n            {markers.map(marker =>\n                <Marker position={marker} icon={new Icon({ iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41] })}>\n                    <Popup>\n                        <div>\n                            <p>Marker is at {marker.lat}, {marker.lng}</p>\n                            <button onClick={() => removeMarker(marker)}>Remove marker</button>\n                        </div>\n                    </Popup>\n                </Marker>\n            )}\n        </>\n    )\n}\n\nconst Map = () => {\n    const defaultPosition = [60.17054205960518, 24.9414674394951];\n\n    return (\n        <div className=\"map__container\">\n            <MapContainer\n                center={defaultPosition}\n                zoom={13}\n                style={{ height: \"90vh\", width: \"100%\" }}\n            >\n                <AddMarkerToClick />\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n            </MapContainer>\n        </div>\n    );\n};\n\nexport default Map","import Map from './components/Map'\n\nfunction App() {\n  return (\n    <div>\n      <p>Map App</p>\n      <Map></Map>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}